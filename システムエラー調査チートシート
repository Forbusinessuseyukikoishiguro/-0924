# システムエラー・不具合調査チートシート

## 🚨 緊急時対応フロー（最初の5分）

### **STEP 1: 状況把握（1分）**
```
✅ エラー発生時刻: ___________
✅ 影響範囲: [ ] 全体 [ ] 一部機能 [ ] 特定ユーザー
✅ 現在の状況: [ ] 完全停止 [ ] 部分的不具合 [ ] パフォーマンス低下
✅ ユーザーへの影響度: [ ] 高 [ ] 中 [ ] 低
```

### **STEP 2: 即座確認項目（2分）**
- [ ] サーバー死活状況（ping、HTTP応答）
- [ ] データベース接続状況
- [ ] 外部API接続状況
- [ ] ディスク容量、メモリ使用率
- [ ] 最近のデプロイ・設定変更の有無

### **STEP 3: 初期対応（2分）**
- [ ] 関係者への第一報連絡
- [ ] 暫定対応の検討（サービス停止、切り戻し等）
- [ ] 調査開始の記録

---

## 📋 体系的エラー調査チェックリスト

### 🔍 **レベル1: 基本調査（5-10分）**

#### **システム状態確認**
```bash
# サーバー基本状態
✅ CPU使用率: top, htop
✅ メモリ使用量: free -h
✅ ディスク容量: df -h
✅ プロセス状況: ps aux | grep [アプリ名]
✅ ネットワーク: netstat -an | grep [ポート]
```

#### **ログ確認（重要度順）**
```bash
# 1. アプリケーションログ
tail -f /var/log/[app]/error.log
tail -100 /var/log/[app]/access.log

# 2. Webサーバーログ（Apache/Nginx）
tail -f /var/log/nginx/error.log
tail -f /var/log/apache2/error.log

# 3. システムログ
tail -f /var/log/syslog
dmesg | tail

# 4. データベースログ
tail -f /var/log/mysql/error.log
tail -f /var/log/postgresql/postgresql.log
```

#### **エラーメッセージ分析**
- [ ] エラーの正確な文言を記録
- [ ] エラーコード、HTTP ステータスコード
- [ ] スタックトレースの確認
- [ ] エラー発生頻度・パターン

### 🔍 **レベル2: 詳細調査（10-30分）**

#### **時系列分析**
```
✅ エラー初回発生時刻: ___________
✅ 最近のリリース日時: ___________
✅ 設定変更日時: ___________
✅ インフラ変更日時: ___________
✅ 外部サービスメンテナンス: ___________
```

#### **データベース調査**
```sql
-- 実行中クエリ確認
SHOW PROCESSLIST;

-- 長時間実行クエリ
SELECT * FROM INFORMATION_SCHEMA.PROCESSLIST 
WHERE TIME > 30;

-- デッドロック確認
SHOW ENGINE INNODB STATUS;

-- テーブル状況
SHOW TABLE STATUS LIKE '[テーブル名]';
```

#### **外部依存調査**
- [ ] 外部API応答時間測定
- [ ] DNS解決確認
- [ ] SSL証明書有効期限
- [ ] CDN、ロードバランサー状況
- [ ] 外部サービス障害情報確認

### 🔍 **レベル3: 高度な調査（30分以上）**

#### **パフォーマンス分析**
```bash
# アプリケーション性能
strace -p [PID]
lsof -p [PID]
tcpdump -i any host [対象IP]

# データベース性能
EXPLAIN [問題のSQL];
SHOW PROFILE FOR QUERY [Query_ID];
```

#### **コード・設定確認**
- [ ] 最近のコミット差分確認
- [ ] 設定ファイルの妥当性検証
- [ ] 環境変数の確認
- [ ] 依存ライブラリのバージョン確認

---

## 🎯 エラータイプ別対応ガイド

### **500 Internal Server Error**
```
🔍 調査順序:
1. アプリケーションログでスタックトレース確認
2. 最近のコード変更チェック
3. データベース接続状況
4. ファイル権限・パス確認
5. メモリ・リソース枯渇確認
```

### **404 Not Found**
```
🔍 調査順序:
1. URLルーティング設定確認
2. ファイル・ディレクトリ存在確認
3. Webサーバー設定（RewriteRule等）
4. アプリケーションのルーティング定義
```

### **503 Service Unavailable**
```
🔍 調査順序:
1. サーバー負荷状況（CPU、メモリ）
2. データベース接続プール枯渇
3. 外部API応答遅延
4. ロードバランサー設定
5. メンテナンスモード確認
```

### **Database Connection Error**
```
🔍 調査順序:
1. データベースサーバー死活確認
2. 接続プール設定
3. 認証情報確認
4. ネットワーク疎通確認
5. データベースログ確認
```

---

## 📞 エスカレーション判断基準

### **即座にエスカレーション**
- [ ] サービス全体が停止
- [ ] データ消失・破損の可能性
- [ ] セキュリティインシデントの疑い
- [ ] 30分以内に解決見込みなし

### **1時間以内にエスカレーション**
- [ ] 主要機能が利用不可
- [ ] 多数のユーザーに影響
- [ ] 原因究明に専門知識が必要

### **定期報告でOK**
- [ ] 一部機能の軽微な不具合
- [ ] 特定条件下でのみ発生
- [ ] 回避手順が明確

---

## 📝 調査記録テンプレート

### **障害報告書フォーマット**
```
【障害概要】
発生日時: YYYY/MM/DD HH:MM
検知日時: YYYY/MM/DD HH:MM
復旧日時: YYYY/MM/DD HH:MM
影響範囲: 
症状: 

【原因】
直接原因: 
根本原因: 

【対応内容】
緊急対応: 
恒久対応: 

【再発防止策】
短期: 
中長期: 

【タイムライン】
HH:MM - 事象
HH:MM - 対応
```

---

## 🛠️ よく使うコマンド集

### **Linux基本調査**
```bash
# システム状況
uptime                    # 負荷平均
iostat -x 1              # ディスクI/O
sar -u 1 3              # CPU使用率推移
vmstat 1 5              # メモリ・スワップ

# ネットワーク
ss -tuln                 # リスニングポート
ping -c 4 [host]        # 疎通確認
curl -I [URL]           # HTTP応答確認
dig [domain]            # DNS確認
```

### **プロセス・ログ調査**
```bash
# プロセス
pgrep -f [process]      # プロセス検索
kill -USR1 [PID]       # シグナル送信
lsof -i :[port]         # ポート使用プロセス

# ログ分析
grep -r "ERROR" /var/log/
tail -f [file] | grep -i error
awk '/ERROR/ {print $1, $2, $9}' access.log
```

### **データベース調査**
```sql
-- MySQL/MariaDB
SHOW STATUS LIKE 'Threads_connected';
SHOW VARIABLES LIKE 'max_connections';
SELECT * FROM information_schema.innodb_trx;

-- PostgreSQL
SELECT * FROM pg_stat_activity;
SELECT * FROM pg_locks WHERE NOT granted;
```

---

## 🚀 効率化Tips

### **調査の優先順位**
1. **影響度の高い順**: 全体停止 → 主要機能 → 個別機能
2. **確認の容易さ順**: ログ → 設定 → コード → インフラ
3. **変更の新しさ順**: 直近変更 → 週間変更 → 月間変更

### **時間節約テクニック**
- [ ] よく使うログパスをエイリアス登録
- [ ] 調査コマンドをスクリプト化
- [ ] エラーパターン別チェックリスト作成
- [ ] 過去事例の検索可能な形で記録

### **チーム連携**
- [ ] 調査状況をリアルタイム共有
- [ ] 役割分担を明確化（調査担当、連絡担当等）
- [ ] 外部への状況報告テンプレート準備

---

## ⚡ 緊急時の心構え

### **やるべきこと**
- [ ] 冷静に状況を整理
- [ ] 記録を取りながら調査
- [ ] 定期的な進捗報告
- [ ] 仮説を立てて効率的に検証

### **やってはいけないこと**
- [ ] パニックになって手当たり次第に操作
- [ ] 記録を取らずに調査
- [ ] 一人で抱え込む
- [ ] 推測で報告する

**「慌てず、記録し、共有する」が障害対応の基本です。**
