# 炎上案件対応中 残課題管理・見積報告チートシート

## 🚨 炎上案件対応の大原則

### **報告の3つの鉄則**
1. **正直に報告** - 希望的観測は禁物
2. **定期的に報告** - 状況変化を逐次共有
3. **具体的に報告** - 抽象的な表現は避ける

---

## 📋 残課題整理テンプレート

### **🔥 課題分類マトリックス**

| 優先度 | 緊急度 | 対応区分 | 報告頻度 |
|--------|--------|----------|----------|
| 高 | 高 | 【最優先】即座対応 | 毎日 |
| 高 | 中 | 【重要】計画的対応 | 隔日 |
| 中 | 高 | 【準緊急】迅速対応 | 2-3日 |
| 中 | 中 | 【通常】順次対応 | 週次 |
| 低 | - | 【後回し】余力時対応 | 月次 |

### **📊 残課題一覧フォーマット**
```
【課題ID】: #001
【課題名】: ログイン機能の認証エラー
【分類】: バグ修正 / 新規開発 / 仕様変更 / 環境問題
【優先度】: 高 / 中 / 低
【緊急度】: 高 / 中 / 低
【現状】: 調査中 / 修正中 / テスト中 / 完了
【担当者】: 山田太郎
【関連課題】: #002, #003
【お客様影響】: 全ユーザーログイン不可
【発見日】: 2025/09/20
【希望解決日】: 2025/09/25

【詳細説明】
- 現象: ○○の条件下で××エラーが発生
- 再現手順: 1.△△を実行 2.□□を入力 3.エラー発生
- 影響範囲: 全ユーザー / 特定ユーザー / 特定機能
- 暫定対応: ○○により回避可能

【技術詳細】
- エラーログ: [ログ内容]
- 関連システム: 認証サーバー、DB
- 疑われる原因: ○○の設定不備
- 調査済み項目: △△確認済み
- 未調査項目: □□要確認
```

---

## ⏱️ 作業時間見積りガイド

### **📈 三点見積もりの基本**

#### **見積り算出式**
```
期待値 = (楽観値 + 4×最頻値 + 悲観値) ÷ 6

楽観値: 最もうまくいった場合の工数
最頻値: 通常予想される工数
悲観値: 最悪の場合の工数
```

#### **🎯 見積り精度向上のコツ**
```
✅ 過去の類似作業を参考にする
✅ 作業を細かく分解して積み上げる
✅ レビュー・テスト・手戻り時間を含める
✅ 自分の作業効率を客観的に評価する
✅ 外部依存・待ち時間を考慮する
```

### **📝 作業時間見積りテンプレート**

#### **基本テンプレート**
```
【課題】: #001 ログイン機能の認証エラー修正

【作業分解】
1. 原因調査
   楽観: 2時間 / 最頻: 4時間 / 悲観: 8時間
   
2. 修正実装
   楽観: 3時間 / 最頻: 6時間 / 悲観: 12時間
   
3. 単体テスト
   楽観: 2時間 / 最頻: 4時間 / 悲観: 6時間
   
4. 結合テスト
   楽観: 3時間 / 最頻: 6時間 / 悲観: 10時間
   
5. レビュー・修正
   楽観: 1時間 / 最頻: 3時間 / 悲観: 6時間

【合計見積り】
楽観値: 11時間 (1.4日)
最頻値: 23時間 (2.9日)  
悲観値: 42時間 (5.3日)
期待値: 24時間 (3.0日)

【前提条件・リスク】
- データベース接続が正常であること
- 他システムとの連携に問題がないこと
- レビュー者のアサインが確定していること
- お客様からの追加要求がないこと

【外部依存】
- インフラチーム: 環境設定 (0.5日)
- テストチーム: 総合テスト (1.0日)
- お客様: 確認・承認 (2.0日)
```

#### **🚨 炎上案件特有の見積り調整**
```
【追加考慮事項】
✅ プレッシャーによる作業効率低下: +20%
✅ 頻繁な会議・報告による中断: +15%
✅ 仕様変更・追加要求: +30%
✅ 品質チェックの強化: +25%
✅ ドキュメント作成・整備: +10%

【計算例】
基本見積り: 24時間
炎上補正: 24 × 2.0 = 48時間 (6.0日)
```

---

## 📊 進捗報告テンプレート

### **🔥 炎上案件 日次報告フォーマット**
```
【炎上案件 日次報告】 YYYY/MM/DD

■ 全体状況
現在の状況: 🔴緊急対応中 / 🟡改善中 / 🟢安定化
完了率: ○○% (前日比: +△△%)
残課題数: ○○件 (前日比: -△△件)

■ 本日の実績
【完了した作業】
- #001: ログイン機能修正 → 完了 (予定通り)
- #002: データ整合性チェック → 完了 (1日遅延)

【進行中の作業】
- #003: パフォーマンス改善 → 50% (順調)
- #004: セキュリティ対応 → 30% (遅延気味)

【新たに発見した課題】
- #005: バックアップ機能の不具合発見

■ 明日の予定
【重点作業】
- #004: セキュリティ対応 (完了予定)
- #003: パフォーマンス改善 (テスト開始予定)

【想定リスク】
- #004の調査で追加課題が発見される可能性
- 外部ベンダーからの回答待ち

■ 見積り更新
【今日時点での全体見積り】
楽観値: あと○日 (○月○日完了)
最頻値: あと○日 (○月○日完了) ★報告ベース
悲観値: あと○日 (○月○日完了)

【前回報告からの変化】
- 楽観値: -1日 (効率化により短縮)
- 悲観値: +2日 (新規課題発見のため)

■ サポート要請
【必要なサポート】
- インフラチームの○○対応 (緊急)
- お客様への○○説明 (営業経由)
- 追加要員の検討 (○○領域)

【解決済み課題】
- 開発環境の問題 → インフラチームが解決

■ 次回報告予定
明日 18:00 (定時報告)
緊急事項発生時は随時
```

### **📈 週次まとめ報告フォーマット**
```
【炎上案件 週次報告】 YYYY/MM/DD週

■ 週間サマリー
【達成状況】
- 計画完了: ○○件
- 予定より早期完了: ○○件  
- 遅延: ○○件
- 新規発生: ○○件

【主要成果】
- ○○機能の安定化に成功
- パフォーマンスを○○%改善
- お客様からの○○承認を獲得

【主要課題】
- ○○の技術的課題が想定以上に困難
- ○○ベンダーとの調整に時間を要している
- ○○の仕様変更により追加工数が発生

■ 見積り精度検証
【今週の見積り vs 実績】
予定工数: ○○時間 / 実績工数: ○○時間 / 乖離率: ○○%

【要因分析】
- プラス要因: ○○により効率化
- マイナス要因: ○○により工数増

【来週の見積り精度向上策】
- ○○の要因をより詳細に見積りに反映
- ○○の外部依存を早期に確認

■ 来週の重点項目
【最優先課題】(必達)
- #○○○: ○○機能の完成 
- #○○○: ○○問題の根本解決

【重要課題】(できれば完了)
- #○○○: ○○性能の最適化
- #○○○: ○○仕様の最終調整

【継続監視項目】
- ○○システムの安定性
- ○○の品質メトリクス推移
```

---

## 🎯 効果的な報告のコツ

### **✅ 良い報告の特徴**
```
【具体性】
❌ 「順調に進んでいます」
✅ 「10件中7件完了、残り3件は明日完了予定」

【誠実性】
❌ 「多分大丈夫だと思います」
✅ 「現時点で60%の確度、○○の結果次第で変動あり」

【アクション志向】
❌ 「問題が発生しています」
✅ 「○○の問題が発生、△△で対応中、□□のサポート要請」
```

### **📞 エスカレーション判断基準**
```
【即座にエスカレーション】
🚨 お客様への影響が拡大する可能性
🚨 当初見積りから50%以上の乖離
🚨 技術的に解決不可能な課題の発見
🚨 外部ベンダー・他部署との調整が必要

【24時間以内にエスカレーション】
⚠️ 予定より1日以上の遅延確定
⚠️ 品質面での重大な問題発見
⚠️ リソース不足による作業停滞
⚠️ 仕様変更の必要性が判明

【定例報告でOK】
ℹ️ 軽微なスケジュール調整
ℹ️ 技術的課題の進展報告
ℹ️ 改善提案・効率化の報告
```

---

## 🛠️ 作業効率化ツール

### **📊 課題トラッキング**
```
【推奨ツール】
- Jira: 課題管理・進捗追跡
- Trello: シンプルなカンバン管理
- Excel/Sheets: 軽量な管理表
- GitHub Issues: 開発チーム内の管理

【必須項目】
□ 課題ID・タイトル
□ 優先度・緊急度
□ 担当者・期限
□ 現在のステータス
□ 工数見積り・実績
□ 関連課題・依存関係
```

### **⏰ 時間管理**
```
【時間記録のコツ】
- 15分単位で記録
- 中断・待機時間も記録
- 作業カテゴリ別に分類
- 毎日終業時にまとめ記録

【分析ポイント】
- 見積り精度の向上
- 効率の良い時間帯の把握
- 中断要因の特定・削減
- スキル向上の効果測定
```

---

## 🔄 継続改善サイクル

### **📈 週次振り返り項目**
```
【見積り精度】
□ 今週の見積り vs 実績の分析
□ 乖離の要因特定
□ 来週の見積り方法改善

【作業効率】
□ 効率化できた作業の共有
□ 時間のかかった作業の分析
□ ツール・手法の改善提案

【コミュニケーション】
□ 報告内容の妥当性確認
□ ステークホルダーからのフィードバック
□ 情報共有方法の改善
```

---

## 🎯 炎上収束への道筋

### **段階的収束計画**
```
【フェーズ1: 緊急対応】(1-2週間)
目標: 最重要課題の解決、サービス安定化
指標: 重大障害ゼロ、お客様クレーム激減

【フェーズ2: 品質向上】(2-4週間)  
目標: 根本原因の解決、再発防止策実装
指標: バグ件数50%削減、性能目標達成

【フェーズ3: 正常運用】(1-2週間)
目標: 運用・保守体制の確立
指標: 定常的な保守運用への移行
```

**炎上案件では「正確な現状把握」と「現実的な見積り」が最重要です。**
**希望的観測は禁物。事実に基づいた報告で信頼回復を図りましょう。**
